import { Account } from "../account/account";
import { Envelop } from "../action/envelop";
import { SignerPlugin } from "../action/method";
export interface WsSignerPluginOptions {
    retryCount: number;
    retryDuration: number;
}
export interface WsRequest {
    [key: string]: any;
}
export declare class WsSignerPlugin implements SignerPlugin {
    private ws;
    private readonly provider;
    private readonly options;
    constructor(provider?: string, options?: WsSignerPluginOptions);
    private init;
    private send;
    private reconnectAndSend;
    signAndSend(envelop: Envelop): Promise<string>;
    getAccount(address: string): Promise<Account>;
    getAccounts(): Promise<Array<Account>>;
    getOrigin(plugin?: string): string;
}
